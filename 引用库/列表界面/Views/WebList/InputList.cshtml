@using BD.WebListCommon;
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>列表界面</title>
    <link rel="stylesheet" href="@Skins.GetPubPath("jqwidgets/js/styles/jqx.base.css")"/>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jquery-1.11.1.min.js")"></script>
    <script type="text/javascript" src="@Skins.GetHPath("js/plugins/layer/layer.js")"></script>
    <script type="text/javascript" src="@Skins.GetMy97Path("WdatePicker.js")"></script>
    <!-- jqxGrid -->
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcore.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxdata.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxbuttons.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxscrollbar.js")"></script>

    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxmenu.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcheckbox.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxlistbox.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxdropdownlist.js")"></script>

    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.grouping.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.pager.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.filter.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.sort.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.columnsresize.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.selection.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.aggregates.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcalendar.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxdatetimeinput.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcheckbox.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxlistbox.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcombobox.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.edit.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/globalization/globalize.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/globalization/localization.js")"></script>
    <script type="text/javascript" src="@Skins.GetJsPath("inputlist.js?v=2016062201")"></script>
    <link rel="shortcut icon" href="favicon.ico" />
    <link rel="stylesheet" href="@Skins.GetHPath("css/bootstrap.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/font-awesome.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/plugins/bootstrap-table/bootstrap-table.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/animate.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/style.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/plugins/layer/skin/layer.css")"/>
    <link rel="stylesheet" href="@Skins.GetCssPath("stj.css")"/>
    <!-- CSS -->
    @{ IList<string> cssList = ViewData["css"] as IList<string>; }
    @foreach (var item in cssList)
    {
        <link rel="stylesheet" href="@Skins.GetCustomCssPath(item)"/>
    }
    <!-- JS -->
    @{ IList<string> jsList = ViewData["js"] as IList<string>; }
    @foreach (var item in jsList)
    {
        <script type="text/javascript" src="@Skins.GetCustomJsPath(item)"></script>
    }
</head>
<body class="gray-bg" style="font-size: 20px;">
    <div class="wrapper wrapper-content animated fadeInRight">
        <form id="form1" name="form1" style="padding: 0 0 0 0">
        <input type="hidden" id="param" name="param" value="@ViewData["param"]" />
        <input type="hidden" id="page" name="page" />
        <input type="hidden" id="rows" name="rows" />
        <input type="hidden" id="sort" name="sort" />
        <input type="hidden" id="order" name="order" />
        <!-- 工具栏 -->
        <div id="toolbarDiv"></div>
        <div id="dataDiv" style="margin: 0px auto;">
            <div id="jqxgrid"></div>
        </div>
        </form>
    </div>
    <script type="text/javascript" language="javascript">
        var dataGrid;
        //默认记录值
        var defRow;
        //字段源
        var source;
        //样式
        var theme = "";
        //工具栏
        var toolbarStr = "";
        //初始化数据
        $(function () {
            //初始化界面数据包
            $.ajax({
                type: "POST",
                url: "/WebList/InitInputFormData",
                dataType: "json",
                data: { param: $("#param").val() },
                async: true,
                success: function (val) {
                    if (!val.success) {
                        alert(val.msg);
                        return;
                    }
                    //**** 初始化界面 ****
                    //默认记录
                    defRow = val.data.defData;
                    //按钮
                    toolbarStr = initToolbarButton(val.data.buttonList);
                    //列表
                    iniTableForm(val.data);
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                beforeSend: function (XMLHttpRequest) {
                }
            });
        });

        //初始化显示Table界面
        function iniTableForm(data) {
            var listform = data.form;
            var listzdzd = data.zdzdList;
            var str = "";
            //**** 显示字段 ****
            str += "[";
            str += "{";
            str += "    text: '序号',";
            str += "    sortable: false, filterable: false, editable: false,groupable: false, draggable: false, resizable: false,";
            str += "    datafield: '',";
            str += "    align: 'center',";
            str += "    columntype: 'number',";
            str += "    width: 50,";
            str += "    cellsrenderer: function (row, column, value) {";
            str += "        return \"<div style='margin:4px;'>\" + (value + 1) + \"</div>\"";
            str += "    }";
            str += "},";
            //定义dropdownlist对象
            $(listzdzd).each(function (index) {
                if(listzdzd[index].columntype == "dropdownlist")
                    window.eval("var " + listzdzd[index].zdname + "Adapter;");
            });
            //循环
            $(listzdzd).each(function (index) {
                str += "{";
                str += "    datafield:'" + listzdzd[index].zdname + "',";
                str += "    hidden: " + listzdzd[index].sfhidden + ",";
                if(!listzdzd[index].summaryfield) {
                    str += "    text:'" + listzdzd[index].zdsy + "',";
                    str += "    resizable:true,"
                    str += "    cellsalign: '" + listzdzd[index].align + "',";
                    str += "    align: 'center',";

                    //格式化
                    if (listzdzd[index].formatevent != "")
                        str += "   cellsrenderer: " + listzdzd[index].formatevent + ",";
                    //过滤类型
                    str += "    filtertype: '" + listzdzd[index].filtertype + "',";
                    //附带过滤信息
                    if(listzdzd[index].cellsformat != "")
                        str += "    cellsformat: '" + listzdzd[index].cellsformat + "',";
                    //修改类型
                    str += "    columntype: '" + listzdzd[index].columntype + "',";
                    if(listzdzd[index].columntype == "combobox" || listzdzd[index].columntype == "dropdownlist")
                    {
                        //ctrlvalue
                        var ctrlvalue = "";
                        if(listzdzd[index].ctrlstring.length > 0)
                        {
                            var keyParam;
                            var typeList = listzdzd[index].ctrlstring.split("||");
                            for (var i = 0; i < typeList.length; i++) {
                                keyParam = StrSplit(typeList[i], "--");
                                //改变其他控件ctrlChange
                                if (keyParam.key == "value") {
                                    ctrlvalue = keyParam.value;
                                }
                            }
                        }
                        if(listzdzd[index].columntype == "combobox")
                        {
                            str += "    createeditor: function (row, column, editor) {";
                            //定义变量
                            str += "        var list = ";
                            str += "        [";
                            //分析每一项
                            var items = ctrlvalue.split("|");
                            var itemList;
                            for (var iItem = 0; iItem < items.length; iItem++) {
                                str += "        {";
                                itemList = items[iItem].split(",");
                                //标题
                                str += "            label:'" + itemList[0] + "',";
                                //内容
                                str += "            value:";
                                if(itemList.length > 1)
                                    str += "'" + itemList[1] + "'";
                                else
                                    str += "'" + itemList[0] + "'";
                                str += "        },";
                            }
                            //去掉最后一个逗号
                            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                                str = str.substring(0, str.length - 1)
                            str += "        ];";
                            //str += "        var list = ['Stuttgart', 'Rio de Janeiro', 'Strasbourg'];";
                            str += "        editor.jqxComboBox({ autoDropDownHeight: true, source: list, promptText: '请选择:' });";
                            str += "    },";
                        }
                        else if(listzdzd[index].columntype == "dropdownlist")
                        {
                            str += "    createeditor: function (row, column, editor) {";
                            //定义变量
                            str += "        var list = ";
                            str += "        [";
                            //分析每一项
                            var items = ctrlvalue.split("|");
                            var itemList;
                            for (var iItem = 0; iItem < items.length; iItem++) {
                                str += "        {";
                                itemList = items[iItem].split(",");
                                //标题
                                str += "            label:'" + itemList[0] + "',";
                                //内容
                                str += "            value:";
                                if(itemList.length > 1)
                                    str += "'" + itemList[1] + "'";
                                else
                                    str += "'" + itemList[0] + "'";
                                str += "        },";
                            }
                            //去掉最后一个逗号
                            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                                str = str.substring(0, str.length - 1)
                            str += "        ];";
                            //str += "        var list = ['Stuttgart', 'Rio de Janeiro', 'Strasbourg'];";
                            str += "        editor.jqxDropDownList({ autoDropDownHeight: true, source: list,displayMember:'value', promptText: '请选择:' });";
                            str += "    },";
                        }
                        else if(listzdzd[index].columntype == "dropdownlist1")
                        {
                            //设置显示与隐藏值
                            str += "    displayfield: '" + listzdzd[index].zdname + "showlabel',";
                            str += "    createeditor: function (row, column, editor) {";
                            //定义变量
                            str += "        var " + listzdzd[index].zdname + "list = ";
                            str += "        [";
                            //分析每一项
                            var items = ctrlvalue.split("|");
                            var itemList;
                            for (var iItem = 0; iItem < items.length; iItem++) {
                                str += "        {";
                                itemList = items[iItem].split(",");
                                //标题
                                str += "            label:'" + itemList[0] + "',";
                                //内容
                                str += "            value:";
                                if(itemList.length > 1)
                                    str += "'" + itemList[1] + "'";
                                else
                                    str += "'" + itemList[0] + "'";
                                str += "        },";
                            }
                            //去掉最后一个逗号
                            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                                str = str.substring(0, str.length - 1)
                            str += "        ];";
//                            str += "        var data = new Array();";
//                            str += "        var row;";
//                            //分析每一项
//                            var items = ctrlvalue.split("|");
//                            var itemList;
//                            for (var iItem = 0; iItem < items.length; iItem++) {
//                                itemList = items[iItem].split(",");
//                                str += "    row = {};";
//                                str += "    row['showlabel'] = '"+itemList[0]+"';";
//                                if(itemList.length > 1)
//                                    str += "    row['hiddenvalue'] = '"+itemList[1]+"';";
//                                else
//                                    str += "    row['hiddenvalue'] = '"+itemList[1]+"';";
//                                str += "    data[" + iItem + "] = row;";
//                            }
                            //数据源
                            str += "        var " + listzdzd[index].zdname + "Source = ";
                            str += "        {";
                            str += "            localdata: " + listzdzd[index].zdname + "list,";
                            str += "            datatype: 'array',";
                            str += "            datafields:[";
                            str += "                { name: 'label', type: 'string' },";
                            str += "                { name: 'value', type: 'string' },";
                            str += "            ]";
                            str += "        };";
                            //适配器
                            str += "        " + listzdzd[index].zdname + "Adapter = new $.jqx.dataAdapter(" + listzdzd[index].zdname + "Source,{autoBind: true});";                
                            str += "        editor.jqxDropDownList({ autoDropDownHeight: true, source: " + listzdzd[index].zdname + "Adapter, promptText: '请选择:'  });";
                            str += "    },";
                        }
                    }
                }
                str += "    width:" + listzdzd[index].zdwidth + "";
                str += "},";
            });
            //去掉功能项后面的||
            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                str = str.substring(0, str.length - 1)
            str += "]";
            var columns = eval(str);
            //**** 显示字段 ****
            //**** 数据字段 ****
            str = "";
            str += "[";
            $(listzdzd).each(function (index) {
                str += "{";        
                str += "type:'" + listzdzd[index].datatype + "',";
                if(listzdzd[index].datatype == "range"){
                    //str += "map:'date',";
                    str += "format:'yyyy-MM-dd',";
                }
                //判断是否为特殊控件
                if(listzdzd[index].columntype == "dropdownlist1")
                {
                    //str += "    value:'" + listzdzd[index].zdname + "showlabel',";
                   // str += "    values: { source: " + listzdzd[index].zdname + "Adapter.localdata, value: 'value', name: 'label' },";
                }
                str += "name:'" + listzdzd[index].zdname + "'";
                str += "},";
            });
            //去掉功能项后面的||
            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                str = str.substring(0, str.length - 1)
            str += "]";
            var datafields = eval(str);
            //**** 数据字段 ****
            //过滤字段
            source = {
                datafields: datafields,
                datatype: "json",
                type: "post",
                url: "/WebList/SearchInputFormData",
                processdata: function (data) {
                    data.param = "@ViewData["param"]";
                },
                sort: function () {
                    dataGrid.jqxGrid('updatebounddata', 'sort');
                },
                filter: function () {
                    dataGrid.jqxGrid('updatebounddata', 'filter');  
                },
                addrow: function (rowid, rowdata, position, commit) {
                    commit(true);
                },
                updaterow: function (rowid, rowdata, commit) {alert(JSON.stringify(rowdata));
                    //询问框
                    if(confirm("确定保存数据吗？")){
                          $.ajax({
                            type: "post",
                            url: '/WebList/SaveData',
                            dataType: 'json',
                            data: { param: "@ViewData["param"]",jsonData: JSON.stringify(rowdata) },
                            success: function (data) {
                               if (data.success) {
                                    commit(true);
                               }
                               else
                               {
                                    commit(false);
                                    layer.alert(data.msg);
                               }
                            },
                            error: function () {
                                commit(false);
                                layer.alert("访问服务器出错，请检查网络是否通畅！");
                            },
                            beforeSend: function (XMLHttpRequest) {
                                //遮罩
                                layer.load();
                            },
                            complete: function (XMLHttpRequest, textStatus) {
                                //遮罩
                                layer.closeAll("loading");
                            }
                        });
                    }
                    else {
                        commit(false);
                    }   
                },
                cache: false,
                root: 'rows',
                beforeprocessing: function (data) {
                    source.totalrecords = data.total;
                }
            };

            var dataAdapter = new $.jqx.dataAdapter(source);
            dataGrid = $("#jqxgrid").jqxGrid({       
                theme: theme,
                //语言
                localization: getLocalization('cn'),
                altrows: true,//行间底色区分  
                width: $(window).width() - 50,
                height: $(window).height() - 50,
                source: dataAdapter,
                //修改
                selectionmode: listform.singleselect ? "singlerow" : "multiplerows",
                editMode : 'selectedrow',//'dblclick',
                editable: true,
                //分页
                pageable: true,
                pagesize: listform.pagesize, //每页显示50条  
                pagesizeoptions: eval(listform.limitsize), //可选择每页显示条数      
                virtualmode: true,
                rendergridrows: function (params) {
                    return params.data;
                },
                //selectionmode:"multiplerows",
                //showgroupsheader: true,
                //groupable: true,
                //过滤
                showfilterrow: true,
                filterable: true,
                //selectionmode: listform.singleselect ? "singlerow" : "multiplerows",checkbox
                selectionmode: listform.singleselect ? "singlerow" : "checkbox",//'multiplecellsextended',//singlerow
                //ready: function () { $("#jqxgrid").jqxGrid('sortby', 'firstname', 'asc'); },      //默认排序
                sortable: true,
                //工具栏
                showtoolbar: true,
                rendertoolbar: initToolbar,
                //汇总
                showaggregates: listform.summaryheight == 0 ? false : true,
                showstatusbar: listform.summaryheight == 0 ? false : true,
                statusbarheight: listform.summaryheight,
                //列拉伸
                columnsresize: true,
                columns: columns
            });
            //双击事件
            dataGrid.on("rowdoubleclick", function (event) {
                //判断是否有双击事件
                if (listform.dbclickfunname != "")
                    eval(listform.dbclickfunname + "(" + event.args.rowindex + ")");
            });
            //**** 绑定事件 ****
            //**** 工具栏事件 ****
            function initToolbar(toolbar) {
                toolbar.append(toolbarStr);
            };
            //**** 工具栏事件 ****
            //浏览器缩放
            $(window).resize(function () {
                dataGrid.jqxGrid({ width: $(window).width() - 50, height: $(window).height() - 50}); 
            });
        }
       
    </script>
</body>
</html>
