@using BD.WebListCommon;
@using BD.WebListDataModel.Entities;
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>列表界面</title>@*    <script type="text/javascript" src="@Skins.GetHPath("js/jquery.min.js?v=2.1.4")"></script>*@
    <link rel="stylesheet" href="@Skins.GetPubPath("jqwidgets/js/styles/jqx.base.css")"/>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jquery-1.11.1.min.js")"></script>
    <script type="text/javascript" src="@Skins.GetHPath("js/plugins/layer/layer.js")"></script>
    <script type="text/javascript" src="@Skins.GetMy97Path("WdatePicker.js")"></script>
    <!-- jqxGrid -->
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcore.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxdata.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxbuttons.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxscrollbar.js")"></script>

    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxmenu.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcheckbox.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxlistbox.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxdropdownlist.js")"></script>

    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.grouping.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.pager.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.filter.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.sort.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.columnsresize.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.selection.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxgrid.aggregates.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcalendar.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxdatetimeinput.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/jqxcheckbox.js")"></script> 
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/globalization/globalize.js")"></script>
    <script type="text/javascript" src="@Skins.GetPubPath("jqwidgets/js/globalization/localization.js")"></script>
    <script type="text/javascript" src="@Skins.GetJsPath("weblist.js?v=2016062201")"></script>
    <link rel="shortcut icon" href="favicon.ico" />
    <link rel="stylesheet" href="@Skins.GetHPath("css/bootstrap.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/font-awesome.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/plugins/bootstrap-table/bootstrap-table.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/animate.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/style.min.css")"/>
    <link rel="stylesheet" href="@Skins.GetHPath("css/plugins/layer/skin/layer.css")"/>
    <link rel="stylesheet" href="@Skins.GetCssPath("stj.css")"/>

    <script type="text/javascript" src="@Skins.GetJsPath("prefixfree.min.js")"></script>
    <script type="text/javascript" src="@Skins.GetJsPath("pubselect.js")"></script>

    <!-- CSS -->
    @{ IList<string> cssList = ViewData["css"] as IList<string>; }
    @foreach (var item in cssList)
    {
        <link rel="stylesheet" href="@Skins.GetCustomCssPath(item)"/>
    }
    <!-- JS -->
    @{ IList<string> jsList = ViewData["js"] as IList<string>; }
    @foreach (var item in jsList)
    {
        <script type="text/javascript" src="@Skins.GetCustomJsPath(item)"></script>
    }
</head>
<body class="gray-bg" style="font-size: 20px;">
    <div class="wrapper wrapper-content animated fadeInRight">
        <form id="form1" name="form1" style="padding: 0 0 0 0">
         <!-- HiddenForm -->
        @{ IList<string> hiddenList = ViewData["hidden"] as IList<string>; }
        @foreach (var item in hiddenList)
        {
            string[] hiddenSubList = item.Split(',');
            <input type="hidden" id="@hiddenSubList[0]" name="@hiddenSubList[0]" value="@hiddenSubList[1]" />
        }
        <input type="hidden" id="param" name="param" value="@ViewData["param"]" />
        <input type="hidden" id="searchTxt" name="searchTxt" />
        <input type="hidden" id="page" name="page" />
        <input type="hidden" id="rows" name="rows" />
        <input type="hidden" id="sort" name="sort" />
        <input type="hidden" id="order" name="order" />
        <!-- 按钮 -->
        <div id="buttonDiv"></div>
        <!-- 查询条件 -->
@*        <div id="conditionDiv" style="overflow: auto">
        </div>*@
        <!-- 工具栏 -->
@*        <div id="toolbarDiv">
        </div>*@
        <!-- 列表 -->
        @{ Form form = ViewData["form"] as Form; }
        @{ IList<FormZdzd> zdzdList = ViewData["zdzd"] as IList<FormZdzd>; }

        <div id="dataDiv" style="margin: 0px auto;">
            <div id="jqxgrid"></div>
        </div>
        </form>
    </div>
    <div id="export">
        <form id="dataExportForm" method="post" action="">
            <input type="hidden" id="exportparam" name="exportparam" value="@ViewData["param"]" />
        </form>  
    </div>
    <script type="text/javascript" language="javascript">
        var dataGrid;
        //字段源
        var source;
        //样式
        var theme = "";
        //工具栏
        var toolbarStr = "";
        //初始化数据
        $(function () {
            //初始化界面数据包
            $.ajax({
                type: "POST",
                url: "/WebList/InitFormData",
                dataType: "json",
                data: { param: $("#param").val() },
                async: true,
                success: function (val) {
                    if (!val.success) {
                        alert(val.msg);
                        return;
                    }
                    //**** 初始化界面 ****
                    //按钮
                    $("#buttonDiv").html(initToolbarButton(val.data.buttonList));
                    //toolbarStr = initToolbarButton(val.data.buttonList);
                    //查询条件
                    //$("#conditionDiv").html(initCondition(val.data.conditionList));
                    //列表
                    iniTableForm(val.data);
                    //**** 初始化列表 ****
                    //initContentData();
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                beforeSend: function (XMLHttpRequest) {
                }
            });
        });

        //初始化内容
        function initContentData() {     
            //绑定事件
            bindEvent();
            //查询数据
            //searchRecord();
        }

        //文本查询条件
        var inputNameColumnFilter = function () {
                var filtergroup = new $.jqx.filter();
                var filter_or_operator = 1;
                var filtervalue = '';
                var filtercondition = 'contains';
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                filtergroup.addfilter(filter_or_operator, filter);
                return filtergroup;
        }();
        //日期查询条件
        var dateNameColumnFilter = function () {
                var filtergroup = new $.jqx.filter();
                var filter_or_operator = 1;
                var filtervalue = '';
                var filtercondition = 'contains';
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                filtergroup.addfilter(filter_or_operator, filter);
                return filtergroup;
        }();
        //初始化显示Table界面
        function iniTableForm(data) {
            var listform = data.form;
            var listzdzd = data.zdzdList
            var str = "";
            //**** 显示字段 ****
            str += "[";
            str += "{";
            str += "    text: '序号',";
            str += "    sortable: false, filterable: false,editable: false,groupable: false, draggable: false, resizable: false,";
            str += "    datafield: '',";
            str += "    align: 'center',";
            str += "    columntype: 'number',";
            str += "    width: 50,";
            str += "    cellsrenderer: function (row, column, value) {";
            str += "        return \"<div style='margin:4px;'>\" + (value + 1) + \"</div>\"";
            str += "    }";
            str += "},";

//            str += "{";
//            str += "    text: '汇总',";
//            str += "    sortable: false, filterable: false, editable: false,groupable: false, draggable: false, resizable: false,";
//            str += "    datafield: 'summarycontent',";
//            str += "    align: 'center',";
//            str += "    width: 50";
//            str += "},";
            $(listzdzd).each(function (index) {
                str += "{";
                str += "    datafield:'" + listzdzd[index].zdname + "',";
                str += "    hidden: " + listzdzd[index].sfhidden + ",";
                if(!listzdzd[index].summaryfield) {
                    str += "    text:'" + listzdzd[index].zdsy + "',";
                    str += "    resizable:true,"
                    str += "    cellsalign: '" + listzdzd[index].align + "',";
                    str += "    align: 'center',";

                    //格式化
                    if (listzdzd[index].formatevent != "")
                        str += "   cellsrenderer: " + listzdzd[index].formatevent + ",";
                    //是否有汇总信息
    //                str += "    aggregates: ['stdev'],";
    //                str += "    aggregatesrenderer: function (aggregates, column, element,record) {";
    //                str += "        var renderstring = 'a<font style=\"color:red\">a</font>a' + record['QYID'];";
    //                str += "        return renderstring;";
    //                str += "    },";
    //                str += "    aggregates: [";
    //                str += "        {";
    //                str += "             '是工 343 地式<br/>地有地一':function (aggregatedValue, currentValue, column, record){return '<b>Total</b>12<font style=\"color:red\">3</font>3';}";
    //                str += "        }";
    //                str += "    ],";
                    //过滤类型
                    //日期范围
                    if(listzdzd[index].filtertype == "range" || listzdzd[index].filtertype == "date") {
                        str += "    filtertype: '" + listzdzd[index].filtertype + "',";;
                        //附带过滤信息
                        if(listzdzd[index].cellsformat != "")
                            str += "    cellsformat: '" + listzdzd[index].cellsformat + "',";
                    }
                    //文本
                    if(listzdzd[index].filtertype == "input" || listzdzd[index].filtertype == "") {
                        str += " filtercondition: 'contains',";
                    }
                    else
                        str += "    filtertype: '" + listzdzd[index].filtertype + "',";;
                    //是否过滤
                    str += "    filterable: true,";
                    
                    //str += "    columntype:'textbox',";
                    //汇总信息设置
                    if(listzdzd[index].summarytitle != "")
                    {
                        str += "    aggregates: [";
                        str += "        {";
                        str += "            '" + listzdzd[index].summarytitle + "':";
                        str += "            function (aggregatedValue, currentValue,column,record) {";
                        str += "                if((aggregatedValue == 0 || aggregatedValue == '') && record."+listzdzd[index].zdname+"Summary != '') {";
                        str += "                    aggregatedValue = record."+listzdzd[index].zdname+"Summary;";
                        str += "                }";
                        str += "                return aggregatedValue;";
                        str += "            }";
                        str += "        }";
                        str += "    ],";
                    }
                }
                str += "    width:" + listzdzd[index].zdwidth + "";
                str += "},";
            });
            //去掉功能项后面的||
            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                str = str.substring(0, str.length - 1)
            str += "]";
            var columns = eval(str);
            //**** 显示字段 ****
            //**** 数据字段 ****
            str = "";
            str += "[";
            $(listzdzd).each(function (index) {
                str += "{";         
                str += "type:'" + listzdzd[index].datetype + "',";
                if(listzdzd[index].datetype == "range"){
                    //str += "map:'date',";
                    str += "format:'yyyy-MM-dd',";
                }
                str += "name:'" + listzdzd[index].zdname + "'";
                str += "},";
            });
            //去掉功能项后面的||
            if (str.length > 0 && str.charAt(str.length - 1) == ',')
                str = str.substring(0, str.length - 1)
            str += "]";
            var datafields = eval(str);
            //**** 数据字段 ****
            //过滤字段
            source = {
                datafields: datafields,
                datatype: "json",
                type: "post",
                url: "/WebList/SearchFormData",
                processdata: function (data) {
                    data.param = "@ViewData["param"]";
                },
                sort: function () {
                    dataGrid.jqxGrid('updatebounddata', 'sort');
                },
                filter: function () {
                    dataGrid.jqxGrid('updatebounddata', 'filter');  
                },
                cache: false,
                root: 'rows',
                beforeprocessing: function (data) {
                    source.totalrecords = data.total;
                }
            };
          
            var dataAdapter = new $.jqx.dataAdapter(source);
            dataGrid = $("#jqxgrid").jqxGrid({       
                theme: theme,
                //语言
                localization: getLocalization('cn'),
                altrows: true,//行间底色区分  
                width: $(window).width() - 50,
                height: $(window).height() - 100,
                source: dataAdapter,
//                ready: function () {        
//                    addfilter();    
//                },
                //内容
                //everpresentrowheight :500,
                //分页
                pageable: true,
                pagesize: listform.pagesize, //每页显示50条  
                pagesizeoptions: eval(listform.limitsize), //可选择每页显示条数      
                virtualmode: true,
                rendergridrows: function (params) {
                    return params.data;
                },
                //selectionmode:"multiplerows",
                //showgroupsheader: true,
                //groupable: true,
                //过滤
                //autoshowfiltericon: false,
                showfilterrow: true,
                filterable: true,
                //selectionmode: listform.singleselect ? "singlerow" : "multiplerows",checkbox
                selectionmode: listform.singleselect ? (listform.checkbox ? "checkbox" : "singlerow") : "checkbox",//"multiplerows",//'multiplecellsextended',//singlerow
                //ready: function () { $("#jqxgrid").jqxGrid('sortby', 'firstname', 'asc'); },      //默认排序
                sortable: true,
                //工具栏
                //showtoolbar: true,
                //rendertoolbar: initToolbar,
                //汇总
                showaggregates: listform.summaryheight == 0 ? false : true,
                showstatusbar: listform.summaryheight == 0 ? false : true,
                statusbarheight: listform.summaryheight,
                //列拉伸
                columnsresize: true,
                columns: columns
            });
            //**** 绑定事件 ****
//            //分页事件
//            dataGrid.on('pagechanged', function (event) {
//                //                var args = event.args;
//                //                var pagenum = args.pagenum;
//                //                var pagesize = args.pagesize;
//                //                alert(pagenum + ' ' + pagesize);
//                searchFormData();
//            });
            //选中事件
            //dataGrid.on("cellselect", function (event) {alert('f');
            //    dataGrid.jgxGrid("selectrow",event.args.rowindex);
            //});
            //取消选中事件
            //dataGrid.on("rowunselect", function (event) {
            //    dataGrid.jgxGrid("selectrow",event.args.rowindex);
           // }
            //双击事件
            dataGrid.on("rowdoubleclick", function (event) {
                //判断是否有双击事件
                if (listform.dbclickfunname != "")
                    eval(listform.dbclickfunname + "(" + event.args.rowindex + ")");
            });
            //判断是否编写事件
            if(listform.singleselect) {
                dataGrid.on("rowselect", function (event) {
                    // event arguments.  
                    var args = event.args;  
                    // row's bound index.  
                    var rowBoundIndex = args.rowindex;  
                    var selectedIndexes = $('#jqxgrid').jqxGrid('selectedrowindexes');  
                    for (var i = 0; i < selectedIndexes.length; i++)  
                    {  
                        if (rowBoundIndex !== selectedIndexes[i])  
                        {  
                            dataGrid.jqxGrid('unselectrow', selectedIndexes[i]);  
                        }  
                    }  
                });
            }
            //本地化事件
//            dataGrid.bind('bindingcomplete', function () {
//                var localizationobj = {};    
//                filterstringcomparisonoperators = ['empty', 'not empty', '包含', 'contains(match case)',            
//                                'does not contain', 'does not contain(match case)', 'starts with', 'starts with(match case)',            
//                                'ends with', 'ends with(match case)', 'equal', 'equal(match case)', 'null', 'not null'];    
//                filternumericcomparisonoperators = ['equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'];    
//                filterdatecomparisonoperators = ['equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'];    
//                filterbooleancomparisonoperators = ['equal', 'not equal'];    
//                localizationobj.filterstringcomparisonoperators = filterstringcomparisonoperators;    
//                localizationobj.filternumericcomparisonoperators = filternumericcomparisonoperators;    
//                localizationobj.filterdatecomparisonoperators = filterdatecomparisonoperators;    
//                localizationobj.filterbooleancomparisonoperators = filterbooleancomparisonoperators;    
//                // apply localization.    
//                dataGrid.jqxGrid('localizestrings', localizationobj);
//            }); 
            //**** 绑定事件 ****
            //**** 工具栏事件 ****
            function initToolbar(toolbar) {
                toolbar.append(toolbarStr);
            };
            //**** 工具栏事件 ****
            //浏览器缩放
            $(window).resize(function () {
                dataGrid.jqxGrid({ width: $(window).width() - 50, height: $(window).height() - 50}); 
                //dataGrid.jqxGrid('refresh');
            });
            //searchFormData();
            //$('#clearfilteringbutton').jqxButton({ height: 25 }); 
            //$('#clearfilteringbutton').click(function () { $("#jqxgrid").jqxGrid('clearfilters'); });
        }
       
    </script>
</body>
</html>
