//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace BD.Jcbg.Service.XsXhWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QrpwsImpPortBinding", Namespace="http://ws.web.wxg.com/")]
    public partial class QrpwsImpService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getOrgIdByJcdwOrgCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrgIdByJcdwNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadJcDataForLklcOperationCompleted;
        
        private System.Threading.SendOrPostCallback afterUploadJcDataForLklcOperationCompleted;
        
        private System.Threading.SendOrPostCallback requestDefaultQrCodeStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback requestDefaultQrCodeImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback defaultQrCodeImgWithBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback preGetQrCodeStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback afterUpNotLklcDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback preGetNotLklcQRCodeStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotLklcQRCodeStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback upLoadCurveOperationCompleted;
        
        private System.Threading.SendOrPostCallback requestQrCodeImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerJcJgAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLastErrOperationCompleted;
        
        private System.Threading.SendOrPostCallback editJcOrganAllExOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerJcJgOperationCompleted;
        
        private System.Threading.SendOrPostCallback editJcOrganNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback editJcOrganAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback upLoadVideoOperationCompleted;
        
        private System.Threading.SendOrPostCallback upReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback upNotLklcDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback upNotLklcReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotLklcQRCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ypNumberPerPageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QrpwsImpService() {
            this.Url = global::BD.Jcbg.Service.Properties.Settings.Default.BD_Jcbg_Service_XsXhWebService_QrpwsImpService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getOrgIdByJcdwOrgCodeCompletedEventHandler getOrgIdByJcdwOrgCodeCompleted;
        
        /// <remarks/>
        public event getOrgIdByJcdwNameCompletedEventHandler getOrgIdByJcdwNameCompleted;
        
        /// <remarks/>
        public event uploadJcDataForLklcCompletedEventHandler uploadJcDataForLklcCompleted;
        
        /// <remarks/>
        public event afterUploadJcDataForLklcCompletedEventHandler afterUploadJcDataForLklcCompleted;
        
        /// <remarks/>
        public event requestDefaultQrCodeStrCompletedEventHandler requestDefaultQrCodeStrCompleted;
        
        /// <remarks/>
        public event requestDefaultQrCodeImgCompletedEventHandler requestDefaultQrCodeImgCompleted;
        
        /// <remarks/>
        public event defaultQrCodeImgWithBase64CompletedEventHandler defaultQrCodeImgWithBase64Completed;
        
        /// <remarks/>
        public event preGetQrCodeStringCompletedEventHandler preGetQrCodeStringCompleted;
        
        /// <remarks/>
        public event afterUpNotLklcDataCompletedEventHandler afterUpNotLklcDataCompleted;
        
        /// <remarks/>
        public event preGetNotLklcQRCodeStrCompletedEventHandler preGetNotLklcQRCodeStrCompleted;
        
        /// <remarks/>
        public event getNotLklcQRCodeStrCompletedEventHandler getNotLklcQRCodeStrCompleted;
        
        /// <remarks/>
        public event upLoadCurveCompletedEventHandler upLoadCurveCompleted;
        
        /// <remarks/>
        public event requestQrCodeImgCompletedEventHandler requestQrCodeImgCompleted;
        
        /// <remarks/>
        public event registerJcJgAllCompletedEventHandler registerJcJgAllCompleted;
        
        /// <remarks/>
        public event getLastErrCompletedEventHandler getLastErrCompleted;
        
        /// <remarks/>
        public event editJcOrganAllExCompletedEventHandler editJcOrganAllExCompleted;
        
        /// <remarks/>
        public event registerJcJgCompletedEventHandler registerJcJgCompleted;
        
        /// <remarks/>
        public event editJcOrganNameCompletedEventHandler editJcOrganNameCompleted;
        
        /// <remarks/>
        public event editJcOrganAllCompletedEventHandler editJcOrganAllCompleted;
        
        /// <remarks/>
        public event upLoadVideoCompletedEventHandler upLoadVideoCompleted;
        
        /// <remarks/>
        public event upReportCompletedEventHandler upReportCompleted;
        
        /// <remarks/>
        public event upNotLklcDataCompletedEventHandler upNotLklcDataCompleted;
        
        /// <remarks/>
        public event upNotLklcReportCompletedEventHandler upNotLklcReportCompleted;
        
        /// <remarks/>
        public event getNotLklcQRCodeCompletedEventHandler getNotLklcQRCodeCompleted;
        
        /// <remarks/>
        public event ypNumberPerPageCompletedEventHandler ypNumberPerPageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getOrgIdByJcdwOrgCode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getOrgIdByJcdwOrgCode", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOrgIdByJcdwOrgCodeAsync(string arg0) {
            this.getOrgIdByJcdwOrgCodeAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getOrgIdByJcdwOrgCodeAsync(string arg0, object userState) {
            if ((this.getOrgIdByJcdwOrgCodeOperationCompleted == null)) {
                this.getOrgIdByJcdwOrgCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrgIdByJcdwOrgCodeOperationCompleted);
            }
            this.InvokeAsync("getOrgIdByJcdwOrgCode", new object[] {
                        arg0}, this.getOrgIdByJcdwOrgCodeOperationCompleted, userState);
        }
        
        private void OngetOrgIdByJcdwOrgCodeOperationCompleted(object arg) {
            if ((this.getOrgIdByJcdwOrgCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrgIdByJcdwOrgCodeCompleted(this, new getOrgIdByJcdwOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getOrgIdByJcdwName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getOrgIdByJcdwName", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOrgIdByJcdwNameAsync(string arg0) {
            this.getOrgIdByJcdwNameAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getOrgIdByJcdwNameAsync(string arg0, object userState) {
            if ((this.getOrgIdByJcdwNameOperationCompleted == null)) {
                this.getOrgIdByJcdwNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrgIdByJcdwNameOperationCompleted);
            }
            this.InvokeAsync("getOrgIdByJcdwName", new object[] {
                        arg0}, this.getOrgIdByJcdwNameOperationCompleted, userState);
        }
        
        private void OngetOrgIdByJcdwNameOperationCompleted(object arg) {
            if ((this.getOrgIdByJcdwNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrgIdByJcdwNameCompleted(this, new getOrgIdByJcdwNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uploadJcDataForLklc([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("uploadJcDataForLklc", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadJcDataForLklcAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.uploadJcDataForLklcAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void uploadJcDataForLklcAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.uploadJcDataForLklcOperationCompleted == null)) {
                this.uploadJcDataForLklcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadJcDataForLklcOperationCompleted);
            }
            this.InvokeAsync("uploadJcDataForLklc", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.uploadJcDataForLklcOperationCompleted, userState);
        }
        
        private void OnuploadJcDataForLklcOperationCompleted(object arg) {
            if ((this.uploadJcDataForLklcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadJcDataForLklcCompleted(this, new uploadJcDataForLklcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string afterUploadJcDataForLklc([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("afterUploadJcDataForLklc", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void afterUploadJcDataForLklcAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.afterUploadJcDataForLklcAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void afterUploadJcDataForLklcAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.afterUploadJcDataForLklcOperationCompleted == null)) {
                this.afterUploadJcDataForLklcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnafterUploadJcDataForLklcOperationCompleted);
            }
            this.InvokeAsync("afterUploadJcDataForLklc", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.afterUploadJcDataForLklcOperationCompleted, userState);
        }
        
        private void OnafterUploadJcDataForLklcOperationCompleted(object arg) {
            if ((this.afterUploadJcDataForLklcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.afterUploadJcDataForLklcCompleted(this, new afterUploadJcDataForLklcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string requestDefaultQrCodeStr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            object[] results = this.Invoke("requestDefaultQrCodeStr", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void requestDefaultQrCodeStrAsync(string arg0, string arg1, int arg2) {
            this.requestDefaultQrCodeStrAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void requestDefaultQrCodeStrAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.requestDefaultQrCodeStrOperationCompleted == null)) {
                this.requestDefaultQrCodeStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequestDefaultQrCodeStrOperationCompleted);
            }
            this.InvokeAsync("requestDefaultQrCodeStr", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.requestDefaultQrCodeStrOperationCompleted, userState);
        }
        
        private void OnrequestDefaultQrCodeStrOperationCompleted(object arg) {
            if ((this.requestDefaultQrCodeStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.requestDefaultQrCodeStrCompleted(this, new requestDefaultQrCodeStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] requestDefaultQrCodeImg([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            object[] results = this.Invoke("requestDefaultQrCodeImg", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void requestDefaultQrCodeImgAsync(string arg0, string arg1, int arg2) {
            this.requestDefaultQrCodeImgAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void requestDefaultQrCodeImgAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.requestDefaultQrCodeImgOperationCompleted == null)) {
                this.requestDefaultQrCodeImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequestDefaultQrCodeImgOperationCompleted);
            }
            this.InvokeAsync("requestDefaultQrCodeImg", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.requestDefaultQrCodeImgOperationCompleted, userState);
        }
        
        private void OnrequestDefaultQrCodeImgOperationCompleted(object arg) {
            if ((this.requestDefaultQrCodeImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.requestDefaultQrCodeImgCompleted(this, new requestDefaultQrCodeImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultQrCodeImgWithBase64([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            object[] results = this.Invoke("defaultQrCodeImgWithBase64", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void defaultQrCodeImgWithBase64Async(string arg0, string arg1, int arg2) {
            this.defaultQrCodeImgWithBase64Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void defaultQrCodeImgWithBase64Async(string arg0, string arg1, int arg2, object userState) {
            if ((this.defaultQrCodeImgWithBase64OperationCompleted == null)) {
                this.defaultQrCodeImgWithBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OndefaultQrCodeImgWithBase64OperationCompleted);
            }
            this.InvokeAsync("defaultQrCodeImgWithBase64", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.defaultQrCodeImgWithBase64OperationCompleted, userState);
        }
        
        private void OndefaultQrCodeImgWithBase64OperationCompleted(object arg) {
            if ((this.defaultQrCodeImgWithBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.defaultQrCodeImgWithBase64Completed(this, new defaultQrCodeImgWithBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preGetQrCodeString([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            object[] results = this.Invoke("preGetQrCodeString", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void preGetQrCodeStringAsync(string arg0, string arg1, int arg2) {
            this.preGetQrCodeStringAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void preGetQrCodeStringAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.preGetQrCodeStringOperationCompleted == null)) {
                this.preGetQrCodeStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreGetQrCodeStringOperationCompleted);
            }
            this.InvokeAsync("preGetQrCodeString", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.preGetQrCodeStringOperationCompleted, userState);
        }
        
        private void OnpreGetQrCodeStringOperationCompleted(object arg) {
            if ((this.preGetQrCodeStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preGetQrCodeStringCompleted(this, new preGetQrCodeStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string afterUpNotLklcData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg4) {
            object[] results = this.Invoke("afterUpNotLklcData", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void afterUpNotLklcDataAsync(string arg0, string arg1, string arg2, string arg3, int arg4) {
            this.afterUpNotLklcDataAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void afterUpNotLklcDataAsync(string arg0, string arg1, string arg2, string arg3, int arg4, object userState) {
            if ((this.afterUpNotLklcDataOperationCompleted == null)) {
                this.afterUpNotLklcDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnafterUpNotLklcDataOperationCompleted);
            }
            this.InvokeAsync("afterUpNotLklcData", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.afterUpNotLklcDataOperationCompleted, userState);
        }
        
        private void OnafterUpNotLklcDataOperationCompleted(object arg) {
            if ((this.afterUpNotLklcDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.afterUpNotLklcDataCompleted(this, new afterUpNotLklcDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preGetNotLklcQRCodeStr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("preGetNotLklcQRCodeStr", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void preGetNotLklcQRCodeStrAsync(string arg0, string arg1) {
            this.preGetNotLklcQRCodeStrAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void preGetNotLklcQRCodeStrAsync(string arg0, string arg1, object userState) {
            if ((this.preGetNotLklcQRCodeStrOperationCompleted == null)) {
                this.preGetNotLklcQRCodeStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreGetNotLklcQRCodeStrOperationCompleted);
            }
            this.InvokeAsync("preGetNotLklcQRCodeStr", new object[] {
                        arg0,
                        arg1}, this.preGetNotLklcQRCodeStrOperationCompleted, userState);
        }
        
        private void OnpreGetNotLklcQRCodeStrOperationCompleted(object arg) {
            if ((this.preGetNotLklcQRCodeStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preGetNotLklcQRCodeStrCompleted(this, new preGetNotLklcQRCodeStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getNotLklcQRCodeStr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getNotLklcQRCodeStr", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNotLklcQRCodeStrAsync(string arg0, string arg1) {
            this.getNotLklcQRCodeStrAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getNotLklcQRCodeStrAsync(string arg0, string arg1, object userState) {
            if ((this.getNotLklcQRCodeStrOperationCompleted == null)) {
                this.getNotLklcQRCodeStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotLklcQRCodeStrOperationCompleted);
            }
            this.InvokeAsync("getNotLklcQRCodeStr", new object[] {
                        arg0,
                        arg1}, this.getNotLklcQRCodeStrOperationCompleted, userState);
        }
        
        private void OngetNotLklcQRCodeStrOperationCompleted(object arg) {
            if ((this.getNotLklcQRCodeStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotLklcQRCodeStrCompleted(this, new getNotLklcQRCodeStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string upLoadCurve([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg5) {
            object[] results = this.Invoke("upLoadCurve", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upLoadCurveAsync(string arg0, string arg1, string arg2, byte[] arg3, byte[] arg4, byte[] arg5) {
            this.upLoadCurveAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void upLoadCurveAsync(string arg0, string arg1, string arg2, byte[] arg3, byte[] arg4, byte[] arg5, object userState) {
            if ((this.upLoadCurveOperationCompleted == null)) {
                this.upLoadCurveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupLoadCurveOperationCompleted);
            }
            this.InvokeAsync("upLoadCurve", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.upLoadCurveOperationCompleted, userState);
        }
        
        private void OnupLoadCurveOperationCompleted(object arg) {
            if ((this.upLoadCurveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upLoadCurveCompleted(this, new upLoadCurveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] requestQrCodeImg([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("requestQrCodeImg", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void requestQrCodeImgAsync(string arg0, string arg1, int arg2, int arg3, int arg4, string arg5) {
            this.requestQrCodeImgAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void requestQrCodeImgAsync(string arg0, string arg1, int arg2, int arg3, int arg4, string arg5, object userState) {
            if ((this.requestQrCodeImgOperationCompleted == null)) {
                this.requestQrCodeImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequestQrCodeImgOperationCompleted);
            }
            this.InvokeAsync("requestQrCodeImg", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.requestQrCodeImgOperationCompleted, userState);
        }
        
        private void OnrequestQrCodeImgOperationCompleted(object arg) {
            if ((this.requestQrCodeImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.requestQrCodeImgCompleted(this, new requestQrCodeImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string registerJcJgAll([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("registerJcJgAll", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registerJcJgAllAsync(string arg0, string arg1, string arg2, string arg3, string arg4) {
            this.registerJcJgAllAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void registerJcJgAllAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState) {
            if ((this.registerJcJgAllOperationCompleted == null)) {
                this.registerJcJgAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterJcJgAllOperationCompleted);
            }
            this.InvokeAsync("registerJcJgAll", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.registerJcJgAllOperationCompleted, userState);
        }
        
        private void OnregisterJcJgAllOperationCompleted(object arg) {
            if ((this.registerJcJgAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerJcJgAllCompleted(this, new registerJcJgAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getLastErr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getLastErr", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLastErrAsync(string arg0) {
            this.getLastErrAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getLastErrAsync(string arg0, object userState) {
            if ((this.getLastErrOperationCompleted == null)) {
                this.getLastErrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLastErrOperationCompleted);
            }
            this.InvokeAsync("getLastErr", new object[] {
                        arg0}, this.getLastErrOperationCompleted, userState);
        }
        
        private void OngetLastErrOperationCompleted(object arg) {
            if ((this.getLastErrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLastErrCompleted(this, new getLastErrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string editJcOrganAllEx([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("editJcOrganAllEx", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editJcOrganAllExAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.editJcOrganAllExAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void editJcOrganAllExAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.editJcOrganAllExOperationCompleted == null)) {
                this.editJcOrganAllExOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditJcOrganAllExOperationCompleted);
            }
            this.InvokeAsync("editJcOrganAllEx", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.editJcOrganAllExOperationCompleted, userState);
        }
        
        private void OneditJcOrganAllExOperationCompleted(object arg) {
            if ((this.editJcOrganAllExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editJcOrganAllExCompleted(this, new editJcOrganAllExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string registerJcJg([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("registerJcJg", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registerJcJgAsync(string arg0, string arg1, string arg2) {
            this.registerJcJgAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void registerJcJgAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.registerJcJgOperationCompleted == null)) {
                this.registerJcJgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterJcJgOperationCompleted);
            }
            this.InvokeAsync("registerJcJg", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.registerJcJgOperationCompleted, userState);
        }
        
        private void OnregisterJcJgOperationCompleted(object arg) {
            if ((this.registerJcJgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerJcJgCompleted(this, new registerJcJgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string editJcOrganName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("editJcOrganName", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editJcOrganNameAsync(string arg0, string arg1, string arg2) {
            this.editJcOrganNameAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void editJcOrganNameAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.editJcOrganNameOperationCompleted == null)) {
                this.editJcOrganNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditJcOrganNameOperationCompleted);
            }
            this.InvokeAsync("editJcOrganName", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.editJcOrganNameOperationCompleted, userState);
        }
        
        private void OneditJcOrganNameOperationCompleted(object arg) {
            if ((this.editJcOrganNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editJcOrganNameCompleted(this, new editJcOrganNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string editJcOrganAll([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("editJcOrganAll", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editJcOrganAllAsync(string arg0, string arg1, string arg2, string arg3, string arg4) {
            this.editJcOrganAllAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void editJcOrganAllAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState) {
            if ((this.editJcOrganAllOperationCompleted == null)) {
                this.editJcOrganAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditJcOrganAllOperationCompleted);
            }
            this.InvokeAsync("editJcOrganAll", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.editJcOrganAllOperationCompleted, userState);
        }
        
        private void OneditJcOrganAllOperationCompleted(object arg) {
            if ((this.editJcOrganAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editJcOrganAllCompleted(this, new editJcOrganAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string upLoadVideo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("upLoadVideo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upLoadVideoAsync(string arg0, string arg1, string arg2, byte[] arg3, string arg4) {
            this.upLoadVideoAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void upLoadVideoAsync(string arg0, string arg1, string arg2, byte[] arg3, string arg4, object userState) {
            if ((this.upLoadVideoOperationCompleted == null)) {
                this.upLoadVideoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupLoadVideoOperationCompleted);
            }
            this.InvokeAsync("upLoadVideo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.upLoadVideoOperationCompleted, userState);
        }
        
        private void OnupLoadVideoOperationCompleted(object arg) {
            if ((this.upLoadVideoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upLoadVideoCompleted(this, new upLoadVideoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string upReport([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6) {
            object[] results = this.Invoke("upReport", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upReportAsync(string arg0, string arg1, string arg2, string arg3, byte[] arg4, string arg5, string arg6) {
            this.upReportAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void upReportAsync(string arg0, string arg1, string arg2, string arg3, byte[] arg4, string arg5, string arg6, object userState) {
            if ((this.upReportOperationCompleted == null)) {
                this.upReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupReportOperationCompleted);
            }
            this.InvokeAsync("upReport", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.upReportOperationCompleted, userState);
        }
        
        private void OnupReportOperationCompleted(object arg) {
            if ((this.upReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upReportCompleted(this, new upReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string upNotLklcData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg4) {
            object[] results = this.Invoke("upNotLklcData", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upNotLklcDataAsync(string arg0, string arg1, string arg2, string arg3, int arg4) {
            this.upNotLklcDataAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void upNotLklcDataAsync(string arg0, string arg1, string arg2, string arg3, int arg4, object userState) {
            if ((this.upNotLklcDataOperationCompleted == null)) {
                this.upNotLklcDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupNotLklcDataOperationCompleted);
            }
            this.InvokeAsync("upNotLklcData", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.upNotLklcDataOperationCompleted, userState);
        }
        
        private void OnupNotLklcDataOperationCompleted(object arg) {
            if ((this.upNotLklcDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upNotLklcDataCompleted(this, new upNotLklcDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string upNotLklcReport([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("upNotLklcReport", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upNotLklcReportAsync(string arg0, string arg1, byte[] arg2, string arg3) {
            this.upNotLklcReportAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void upNotLklcReportAsync(string arg0, string arg1, byte[] arg2, string arg3, object userState) {
            if ((this.upNotLklcReportOperationCompleted == null)) {
                this.upNotLklcReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupNotLklcReportOperationCompleted);
            }
            this.InvokeAsync("upNotLklcReport", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.upNotLklcReportOperationCompleted, userState);
        }
        
        private void OnupNotLklcReportOperationCompleted(object arg) {
            if ((this.upNotLklcReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upNotLklcReportCompleted(this, new upNotLklcReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getNotLklcQRCode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getNotLklcQRCode", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNotLklcQRCodeAsync(string arg0, string arg1) {
            this.getNotLklcQRCodeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getNotLklcQRCodeAsync(string arg0, string arg1, object userState) {
            if ((this.getNotLklcQRCodeOperationCompleted == null)) {
                this.getNotLklcQRCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotLklcQRCodeOperationCompleted);
            }
            this.InvokeAsync("getNotLklcQRCode", new object[] {
                        arg0,
                        arg1}, this.getNotLklcQRCodeOperationCompleted, userState);
        }
        
        private void OngetNotLklcQRCodeOperationCompleted(object arg) {
            if ((this.getNotLklcQRCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotLklcQRCodeCompleted(this, new getNotLklcQRCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.web.wxg.com/", ResponseNamespace="http://ws.web.wxg.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ypNumberPerPage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("ypNumberPerPage", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ypNumberPerPageAsync(string arg0, string arg1) {
            this.ypNumberPerPageAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void ypNumberPerPageAsync(string arg0, string arg1, object userState) {
            if ((this.ypNumberPerPageOperationCompleted == null)) {
                this.ypNumberPerPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnypNumberPerPageOperationCompleted);
            }
            this.InvokeAsync("ypNumberPerPage", new object[] {
                        arg0,
                        arg1}, this.ypNumberPerPageOperationCompleted, userState);
        }
        
        private void OnypNumberPerPageOperationCompleted(object arg) {
            if ((this.ypNumberPerPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ypNumberPerPageCompleted(this, new ypNumberPerPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getOrgIdByJcdwOrgCodeCompletedEventHandler(object sender, getOrgIdByJcdwOrgCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrgIdByJcdwOrgCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrgIdByJcdwOrgCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getOrgIdByJcdwNameCompletedEventHandler(object sender, getOrgIdByJcdwNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrgIdByJcdwNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrgIdByJcdwNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void uploadJcDataForLklcCompletedEventHandler(object sender, uploadJcDataForLklcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadJcDataForLklcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadJcDataForLklcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void afterUploadJcDataForLklcCompletedEventHandler(object sender, afterUploadJcDataForLklcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class afterUploadJcDataForLklcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal afterUploadJcDataForLklcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void requestDefaultQrCodeStrCompletedEventHandler(object sender, requestDefaultQrCodeStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class requestDefaultQrCodeStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal requestDefaultQrCodeStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void requestDefaultQrCodeImgCompletedEventHandler(object sender, requestDefaultQrCodeImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class requestDefaultQrCodeImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal requestDefaultQrCodeImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void defaultQrCodeImgWithBase64CompletedEventHandler(object sender, defaultQrCodeImgWithBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class defaultQrCodeImgWithBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal defaultQrCodeImgWithBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void preGetQrCodeStringCompletedEventHandler(object sender, preGetQrCodeStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preGetQrCodeStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal preGetQrCodeStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void afterUpNotLklcDataCompletedEventHandler(object sender, afterUpNotLklcDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class afterUpNotLklcDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal afterUpNotLklcDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void preGetNotLklcQRCodeStrCompletedEventHandler(object sender, preGetNotLklcQRCodeStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preGetNotLklcQRCodeStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal preGetNotLklcQRCodeStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNotLklcQRCodeStrCompletedEventHandler(object sender, getNotLklcQRCodeStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotLklcQRCodeStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotLklcQRCodeStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void upLoadCurveCompletedEventHandler(object sender, upLoadCurveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upLoadCurveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upLoadCurveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void requestQrCodeImgCompletedEventHandler(object sender, requestQrCodeImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class requestQrCodeImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal requestQrCodeImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void registerJcJgAllCompletedEventHandler(object sender, registerJcJgAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerJcJgAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerJcJgAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getLastErrCompletedEventHandler(object sender, getLastErrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLastErrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLastErrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void editJcOrganAllExCompletedEventHandler(object sender, editJcOrganAllExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editJcOrganAllExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editJcOrganAllExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void registerJcJgCompletedEventHandler(object sender, registerJcJgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerJcJgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerJcJgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void editJcOrganNameCompletedEventHandler(object sender, editJcOrganNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editJcOrganNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editJcOrganNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void editJcOrganAllCompletedEventHandler(object sender, editJcOrganAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editJcOrganAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editJcOrganAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void upLoadVideoCompletedEventHandler(object sender, upLoadVideoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upLoadVideoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upLoadVideoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void upReportCompletedEventHandler(object sender, upReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void upNotLklcDataCompletedEventHandler(object sender, upNotLklcDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upNotLklcDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upNotLklcDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void upNotLklcReportCompletedEventHandler(object sender, upNotLklcReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upNotLklcReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upNotLklcReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNotLklcQRCodeCompletedEventHandler(object sender, getNotLklcQRCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotLklcQRCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotLklcQRCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ypNumberPerPageCompletedEventHandler(object sender, ypNumberPerPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ypNumberPerPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ypNumberPerPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591