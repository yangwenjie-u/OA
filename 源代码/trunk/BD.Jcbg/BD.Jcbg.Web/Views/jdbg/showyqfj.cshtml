@{
    Layout = "~/Views/workflow/_workflowdo.cshtml";
}

@section head
{
    <script type="text/javascript" src="/skins/WebList/pub/layer/layer.js"></script>

    <script language="javascript" type="text/javascript">
        var idlist = '@ViewBag.idlist';
        var yqhfrq = '@ViewBag.yqhfrq';
        var yqts = '@ViewBag.yqts';
        var yqsj = '@ViewBag.yqsj';
        var jdjlid = '@ViewBag.jdjlid';
        var zgdserial = '@ViewBag.zgdserial';
        var zgdreport = '@ViewBag.zgdreport';
        $(function () {
            try {

                var url = "/jdbg/flowreport?reportfile=" + encodeURIComponent(zgdreport) + "&serial=" + encodeURIComponent(zgdserial) + "&jdjlid=" + jdjlid + "&print=1" + "&reporttype=ZGD";
                // 处理报告
                $('#viewreport').html("<a href=\"" + url + "\" target=\"_blank\">查看整改单</a>");

                // 处理延期申请内容
                $('#yqhfrq').html(yqhfrq);
                $('#yqts').html(yqts);
                $('#yqsj').html(yqsj);
                // 处理附件
                if (idlist == "") {
                    $('#fjdiv').html("没有附件");
                }
                else {
                    var ids = idlist.split(',');
                    if (ids.length > 0) {
                        var fjlist = "";
                        $.each(ids, function (index, fileid) {
                            fjlist += "<div><span class='wfa_frame_img_text'><img src='/workflow/p-s" + fileid + ".jpg' border='0' width='200px' height='200px' style='cursor:pointer' onclick='showOrgImageLayer(\"" + fileid + "\")' /></span></div>"
                        });
                        $('#fjdiv').html(fjlist);
                    }
                }

            } catch (e) {
                $.messager.alert('初始化页面异常', e.message, 'warning');
            }

        });


        function Base64() {

            // private property
            _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

            // public method for encoding
            this.encode = function (input) {
                var output = "";
                var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
                var i = 0;
                input = _utf8_encode(input);
                while (i < input.length) {
                    chr1 = input.charCodeAt(i++);
                    chr2 = input.charCodeAt(i++);
                    chr3 = input.charCodeAt(i++);
                    enc1 = chr1 >> 2;
                    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                    enc4 = chr3 & 63;
                    if (isNaN(chr2)) {
                        enc3 = enc4 = 64;
                    } else if (isNaN(chr3)) {
                        enc4 = 64;
                    }
                    output = output +
                    _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
                    _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
                }
                return output;
            }

            // public method for decoding
            this.decode = function (input) {
                var output = "";
                var chr1, chr2, chr3;
                var enc1, enc2, enc3, enc4;
                var i = 0;
                input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                while (i < input.length) {
                    enc1 = _keyStr.indexOf(input.charAt(i++));
                    enc2 = _keyStr.indexOf(input.charAt(i++));
                    enc3 = _keyStr.indexOf(input.charAt(i++));
                    enc4 = _keyStr.indexOf(input.charAt(i++));
                    chr1 = (enc1 << 2) | (enc2 >> 4);
                    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                    chr3 = ((enc3 & 3) << 6) | enc4;
                    output = output + String.fromCharCode(chr1);
                    if (enc3 != 64) {
                        output = output + String.fromCharCode(chr2);
                    }
                    if (enc4 != 64) {
                        output = output + String.fromCharCode(chr3);
                    }
                }
                output = _utf8_decode(output);
                return output;
            }

            // private method for UTF-8 encoding
            _utf8_encode = function (string) {
                string = string.replace(/\r\n/g, "\n");
                var utftext = "";
                for (var n = 0; n < string.length; n++) {
                    var c = string.charCodeAt(n);
                    if (c < 128) {
                        utftext += String.fromCharCode(c);
                    } else if ((c > 127) && (c < 2048)) {
                        utftext += String.fromCharCode((c >> 6) | 192);
                        utftext += String.fromCharCode((c & 63) | 128);
                    } else {
                        utftext += String.fromCharCode((c >> 12) | 224);
                        utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                        utftext += String.fromCharCode((c & 63) | 128);
                    }

                }
                return utftext;
            }

            // private method for UTF-8 decoding
            _utf8_decode = function (utftext) {
                var string = "";
                var i = 0;
                var c = c1 = c2 = 0;
                while (i < utftext.length) {
                    c = utftext.charCodeAt(i);
                    if (c < 128) {
                        string += String.fromCharCode(c);
                        i++;
                    } else if ((c > 191) && (c < 224)) {
                        c2 = utftext.charCodeAt(i + 1);
                        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                        i += 2;
                    } else {
                        c2 = utftext.charCodeAt(i + 1);
                        c3 = utftext.charCodeAt(i + 2);
                        string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                        i += 3;
                    }
                }
                return string;
            }
        }



    </script>

}
<div>
    <div style="padding:25px;height:auto;">
        <div style="margin-bottom:10px;">整改单内容：<span id="viewreport"></span></div>
        <div style="margin-bottom:10px;">原整改期限：<span id="yqhfrq"></span></div>
        <div style="margin-bottom:10px;">需要延期的天数：<span id="yqts"></span></div>
        <div style="margin-bottom:10px;">需要延期到：<span id="yqsj"></span></div>
        <div style="margin-bottom:10px;">
            <div>附件：</div>
            <div id="fjdiv" style="padding:5px;height:auto;">

            </div>
        </div>
    </div>
    
</div>

