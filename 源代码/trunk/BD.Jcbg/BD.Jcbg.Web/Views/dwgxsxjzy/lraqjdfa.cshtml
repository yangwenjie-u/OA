@{
    Layout = "~/Views/workflow/_workflowdo.cshtml";
}

@section head
{
    <script type="text/javascript" src="/skins/WebList/pub/layer/layer.js"></script>

    <script language="javascript" type="text/javascript">
        var gcbh = '@ViewBag.gcbh';
        var returnurl = '@ViewBag.returnurl';
        $(function () {
            openlrjdfa();
        });

        function openlrjdfa() {
            try {
                var tabledesc = "监督计划";                // 表格描述
                var zdzdtable = encodeURIComponent("ZDZD_JDBG_ZJ"); // zdzd名
                var tablename = encodeURIComponent("REPORTJDJHAJ"); 			// 表名
                var tablerecid = encodeURIComponent("RECID"); 	// 表主键
                var title = encodeURIComponent(tabledesc); 	// 标题
                var formdm = tablename;                             // 列表key名称
                var buttons = encodeURIComponent("保存|TJ| | "); // 按钮;//encodeURIComponent("临时保存|ZC| | ||完成报监|TJ| | "); // 按钮

                var s_tablename = "";// encodeURIComponent("I_M_GC_JWD|I_S_GC_JSDW|I_S_GC_JLDW|I_S_GC_SGDW|I_S_GC_KCDW|I_S_GC_SJDW");
                //  都是从表中的字段：  主表对应字段,自己主键|……
                var s_pri = "";// encodeURIComponent("GCBH,Recid|GCBH,GCQYBH|GCBH,GCQYBH|GCBH,GCQYBH|GCBH,GCQYBH|GCBH,GCQYBH");
                var s_title = "";// encodeURIComponent("工程经纬度|建设单位|监理单位|施工单位|勘察单位|设计单位");

                var ss_tablename = "";// encodeURIComponent("I_S_GC_JSDW|I_S_GC_JSRY||I_S_GC_KCDW|I_S_GC_KCRY||I_S_GC_SJDW|I_S_GC_SJRY||I_S_GC_JLDW|I_S_GC_JLRY||I_S_GC_SGDW|I_S_GC_SGRY");
                //都是明细表中的字段：跟主表对应字段,跟从表对应字段,自己主键
                var ss_pri = "";// encodeURIComponent("GCBH,QYBH,RECID|GCBH,QYBH,RECID|GCBH,QYBH,RECID|GCBH,QYBH,RECID|GCBH,QYBH,RECID");
                var ss_title = "";//encodeURIComponent("建设人员|勘察人员|设计人员|监理人员|施工人员");

                var rdm = Math.random();

                var js = encodeURIComponent("jdjhaqService.js");
                var callback = "";//encodeURIComponent("jdbgService.jdzcsb('$$GCBH$$')");
                var fieldparam = "UIPARAM,GCBH," + gcbh;
                var url = "/datainput/Index?zdzdtable=" + zdzdtable +
                    "&t1_tablename=" + tablename +
                    "&t1_pri=" + tablerecid +
                    "&t1_title=" + title +
                    "&button=" + buttons +
                    "&js=" + js +
                    "&callback=" + callback +
                    "&fieldparam=" + fieldparam +
                    "&rownum=2" +
                    "&LX=N" +
                    "&_=" + rdm;

                parent.layer.open({
                    type: 2,
                    title: '添加' + tabledesc,
                    shadeClose: false,
                    shade: 0.8,
                    area: ['95%', '95%'],
                    content: url,
                    end: function () {
                        if (returnurl !="") {
                            window.location = returnurl;
                        }
                        else {
                            parent.layer.closeAll();
                        }
                    }
                });
            } catch (e) {
                alert(e);
            }
        }

        


        function Base64() {

            // private property
            _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

            // public method for encoding
            this.encode = function (input) {
                var output = "";
                var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
                var i = 0;
                input = _utf8_encode(input);
                while (i < input.length) {
                    chr1 = input.charCodeAt(i++);
                    chr2 = input.charCodeAt(i++);
                    chr3 = input.charCodeAt(i++);
                    enc1 = chr1 >> 2;
                    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                    enc4 = chr3 & 63;
                    if (isNaN(chr2)) {
                        enc3 = enc4 = 64;
                    } else if (isNaN(chr3)) {
                        enc4 = 64;
                    }
                    output = output +
                    _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
                    _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
                }
                return output;
            }

            // public method for decoding
            this.decode = function (input) {
                var output = "";
                var chr1, chr2, chr3;
                var enc1, enc2, enc3, enc4;
                var i = 0;
                input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                while (i < input.length) {
                    enc1 = _keyStr.indexOf(input.charAt(i++));
                    enc2 = _keyStr.indexOf(input.charAt(i++));
                    enc3 = _keyStr.indexOf(input.charAt(i++));
                    enc4 = _keyStr.indexOf(input.charAt(i++));
                    chr1 = (enc1 << 2) | (enc2 >> 4);
                    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                    chr3 = ((enc3 & 3) << 6) | enc4;
                    output = output + String.fromCharCode(chr1);
                    if (enc3 != 64) {
                        output = output + String.fromCharCode(chr2);
                    }
                    if (enc4 != 64) {
                        output = output + String.fromCharCode(chr3);
                    }
                }
                output = _utf8_decode(output);
                return output;
            }

            // private method for UTF-8 encoding
            _utf8_encode = function (string) {
                string = string.replace(/\r\n/g, "\n");
                var utftext = "";
                for (var n = 0; n < string.length; n++) {
                    var c = string.charCodeAt(n);
                    if (c < 128) {
                        utftext += String.fromCharCode(c);
                    } else if ((c > 127) && (c < 2048)) {
                        utftext += String.fromCharCode((c >> 6) | 192);
                        utftext += String.fromCharCode((c & 63) | 128);
                    } else {
                        utftext += String.fromCharCode((c >> 12) | 224);
                        utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                        utftext += String.fromCharCode((c & 63) | 128);
                    }

                }
                return utftext;
            }

            // private method for UTF-8 decoding
            _utf8_decode = function (utftext) {
                var string = "";
                var i = 0;
                var c = c1 = c2 = 0;
                while (i < utftext.length) {
                    c = utftext.charCodeAt(i);
                    if (c < 128) {
                        string += String.fromCharCode(c);
                        i++;
                    } else if ((c > 191) && (c < 224)) {
                        c2 = utftext.charCodeAt(i + 1);
                        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                        i += 2;
                    } else {
                        c2 = utftext.charCodeAt(i + 1);
                        c3 = utftext.charCodeAt(i + 2);
                        string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                        i += 3;
                    }
                }
                return string;
            }
        }



    </script>

}

