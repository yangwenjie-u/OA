@{
    Layout = "~/Views/workflow/_workflowdo.cshtml";
}

@section head
{
<style type="text/css">
    .table_3 {
        border-right: solid 1px #888888;
        border-top: solid 1px #888888;
    }

        .table_3 th {
            border-left: solid 1px #888888;
            border-bottom: solid 1px #888888;
            background-image: none;
            background-color: #f0f0f0;
            color: #000;
            font-size: 14px;
            padding: 5px;
            text-align: center;
        }

        .table_3 td {
            border-left: solid 1px #888888;
            border-bottom: solid 1px #888888;
            font-size: 14px;
            text-align: left;
            height: 40px;
            vertical-align: middle;
            padding: 5px;
        }
</style>

    <script type="text/javascript" src="/skins/WebList/pub/layer/layer.js"></script>

    <script language="javascript" type="text/javascript">
        var zgdbh = '@ViewBag.zgdbh';
        $(function () {
            try {
                $('#spzgdbh').html(zgdbh);
                showdata();
            } catch (e) {
                $.messager.alert('初始化页面异常', e.message, 'warning');
            }

        });

        function showdata() {
            $.ajax({
                type: "post",
                url: "/dwgxwz/gethfxq?zgdbh=" + zgdbh,
                dataType: "json",
                async: false,
                success: function (ret) {
                    if (ret.code == "0") {
                        loadhfxq(ret.data);
                    }
                    else {
                        if (ret.msg == "") {
                            ret.msg = "加载整改单信息失败！";
                        }
                        layer.alert(ret.msg);
                    }
                }
            })
        }
        function loadhfxq(data) {
            var s = "";
            $.each(data, function (i, row) {
                s += "<tr>";
                s += "  <td>" + row.info3 + "</td>";
                s += "  <td>" + row.info1 + "</td>";
                s += "  <td>" + (row.info2==""?row.info5: row.info2) + "</td>";
                s += "  <td>" + row.info4 + "</td>";
                s += "</tr>";
            });
            $('#tbhfxq').append(s);
        }


        function Base64() {

            // private property
            _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

            // public method for encoding
            this.encode = function (input) {
                var output = "";
                var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
                var i = 0;
                input = _utf8_encode(input);
                while (i < input.length) {
                    chr1 = input.charCodeAt(i++);
                    chr2 = input.charCodeAt(i++);
                    chr3 = input.charCodeAt(i++);
                    enc1 = chr1 >> 2;
                    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                    enc4 = chr3 & 63;
                    if (isNaN(chr2)) {
                        enc3 = enc4 = 64;
                    } else if (isNaN(chr3)) {
                        enc4 = 64;
                    }
                    output = output +
                    _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
                    _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
                }
                return output;
            }

            // public method for decoding
            this.decode = function (input) {
                var output = "";
                var chr1, chr2, chr3;
                var enc1, enc2, enc3, enc4;
                var i = 0;
                input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                while (i < input.length) {
                    enc1 = _keyStr.indexOf(input.charAt(i++));
                    enc2 = _keyStr.indexOf(input.charAt(i++));
                    enc3 = _keyStr.indexOf(input.charAt(i++));
                    enc4 = _keyStr.indexOf(input.charAt(i++));
                    chr1 = (enc1 << 2) | (enc2 >> 4);
                    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                    chr3 = ((enc3 & 3) << 6) | enc4;
                    output = output + String.fromCharCode(chr1);
                    if (enc3 != 64) {
                        output = output + String.fromCharCode(chr2);
                    }
                    if (enc4 != 64) {
                        output = output + String.fromCharCode(chr3);
                    }
                }
                output = _utf8_decode(output);
                return output;
            }

            // private method for UTF-8 encoding
            _utf8_encode = function (string) {
                string = string.replace(/\r\n/g, "\n");
                var utftext = "";
                for (var n = 0; n < string.length; n++) {
                    var c = string.charCodeAt(n);
                    if (c < 128) {
                        utftext += String.fromCharCode(c);
                    } else if ((c > 127) && (c < 2048)) {
                        utftext += String.fromCharCode((c >> 6) | 192);
                        utftext += String.fromCharCode((c & 63) | 128);
                    } else {
                        utftext += String.fromCharCode((c >> 12) | 224);
                        utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                        utftext += String.fromCharCode((c & 63) | 128);
                    }

                }
                return utftext;
            }

            // private method for UTF-8 decoding
            _utf8_decode = function (utftext) {
                var string = "";
                var i = 0;
                var c = c1 = c2 = 0;
                while (i < utftext.length) {
                    c = utftext.charCodeAt(i);
                    if (c < 128) {
                        string += String.fromCharCode(c);
                        i++;
                    } else if ((c > 191) && (c < 224)) {
                        c2 = utftext.charCodeAt(i + 1);
                        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                        i += 2;
                    } else {
                        c2 = utftext.charCodeAt(i + 1);
                        c3 = utftext.charCodeAt(i + 2);
                        string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                        i += 3;
                    }
                }
                return string;
            }
        }



    </script>

}
<div>
    <div style="padding:25px;height:auto;">
        <div style="margin-bottom:10px;">整改单编号：<span id="spzgdbh"></span></div>
        <div style="margin-bottom:10px;">
            <div>回复详情：</div>
            <table cellspacing="0" width="100%" class="table_3" id="tbhfxq" >
                <tr>
                    <th>序号</th>
                    <th>整改内容</th>
                    <th>回复方案或整改完成情况</th>
                    <th>确认意见</th>
                </tr>
            </table>
        </div>
    </div>
    
</div>

